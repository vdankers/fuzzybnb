m <- matrix(c(1:10, 11:20), nrow = 10, ncol = 2)
m
apply(m,1,mean)
m
apply(m,1,range)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plotmf(object.reg)
plotMF(object.reg)
object.reg
plotMF(object.reg)
par("mar")
par(mar=c(1,1,1,1))
plotMF(object.reg)
res.test <- predict(object.reg, data.test)
object.reg
res.test <- predict(object.reg, data.test)
data.test[1:1]
data.train
source('~/fuzzybnb/learn.R', chdir = TRUE)
par("mar")
par(mar=c(1,1,1,1))
plotMF(object.reg)
object.reg
plotMF(object.reg)
source('~/fuzzybnb/learn.R', chdir = TRUE)
par("mar")#
#
par(mar=c(1,1,1,1))
plotMF(object.reg)
source('~/fuzzybnb/learn.R', chdir = TRUE)
ncol(listing)
source('~/fuzzybnb/learn.R', chdir = TRUE)
ncol(listing)
source('~/fuzzybnb/learn.R', chdir = TRUE)
listing
listing[0:5,0:ncol(listing)]
varinp.mf <- matrix(c(2,1,3,2,3,0,30,60,0,40,20,50,80,    30,80,40,70,100,60,100,0,0,100,0,100), nrow=5, byrow=TRUE)
varinp.mf
source('~/fuzzybnb/RLearn/mfs.R', chdir = TRUE)
varinput.mf
varinput.mfs
varinp.mf
source('~/fuzzybnb/learn.R', chdir = TRUE)
ncol(listings)
ncol(listing)
listing
source('~/fuzzybnb/learn.R', chdir = TRUE)
ncol(listing)
listing
source('~/fuzzybnb/learn.R', chdir = TRUE)
prices
source('~/fuzzybnb/learn.R', chdir = TRUE)
listing
source('~/fuzzybnb/learn.R', chdir = TRUE)
listing
listing[1:2,]
prices[1:2]
prices[1:2,2]
prices[:2,2]
prices[0:2,2]
varinp.mf <- matrix(c(1, 1, 4, 4, 1, 1, 1, 4, 1, 4, 4, 1, 1, 4, 4, 1, 1, 4, 1, 1, 4, 1, 4, 1, 4, 1, 1, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 1, 4, 1, 4, 1, 1, 4, 1, 4, 1, 1, 1, 4, 1, 1, 4, 2.6, 0.0, 4.8, 0.0, 1.0, 1.2, 0.7, 2.7, 1.7, 0.0, 0.0, 1.7, 2.7, 3.7, 0.0, 0.2, 1.2, 5.2, 2.2, 2.7, 0.0, 1.7, 10.7, 4.7, 0.0, 3.6, 2.1, 0.9, 5.8, 1.6, 0.0, 0.6, 9.6, 3.6, 0.0, 7.0, 9.0, 3.0, 8.0, 0.0, 3.0, 9.0, 6.0, 8.0, 0.0, 3.0, 9.0, 7.0, 8.0, 109.6, 0.0, 45.6, 221.6, 477.6, 4.1, 1.0, 6.7, 0.0, 2.3, 1.5, 1.0, 3.6, 2.1, 0.0, 0.0, 2.0, 3.0, 4.0, 0.0, 1.0, 2.0, 8.0, 3.3, 4.1, 0.0, 3.0, 15.1, 6.6, 0.0, 5.2, 3.4, 2.2, 7.8, 3.5, 0.0, 2.0, 14.8, 5.9, 0.0, 8.0, 10.0, 6.4, 9.0, 0.0, 5.6, 10.0, 7.8, 9.0, 0.0, 6.5, 10.0, 8.0, 9.0, 208.5, 0.0, 132.4, 356.5, 694.8, 6.0, 2.3, 12.3, 0.2, 3.9, 1.8, 1.3, 8.0, 2.8, 0.3, 1.0, 2.3, 3.3, 4.0, 0.0, 1.8, 2.8, 10.0, 5.8, 6.3, 2.0, 4.3, 16.0, 11.3, 1.0, 7.2, 4.9, 3.5, 10.0, 5.4, 1.0, 3.4, 16.0, 11.4, 0.0, 9.0, 10.0, 8.0, 10.0, 0.0, 7.0, 10.0, 9.0, 10.0, 0.0, 8.0, 10.0, 9.0, 10.0, 341.4, 80.6, 230.4,
584.4, 1442.0, 0, 0, 12.3, 1.3, 0, 0, 0, 8.0, 0, 0.8, 1.3, 0, 0, 4.0, 0.8, 0, 0, 10.0, 0, 0, 3.3, 0, 16.0, 0, 2.3, 0, 0, 0, 10.0, 0, 2.4, 0, 16.0, 0, 4.0, 0, 10.0, 0, 0, 3.0, 0, 10.0, 0, 0, 3.0, 0, 10.0, 0, 0, 0, 167.4, 0, 0, 1442.0), nrow=5, byrow=TRUE)
varinp.mf
listings[1,]
listing[1,]
ncol(listing)
source('~/fuzzybnb/learn.R', chdir = TRUE)
ncol(listing)
listing[1,]
listing[1:2,]
listing[1:5,]
prices[1:5,]
ncol(listing)
source('~/fuzzybnb/learn.R', chdir = TRUE)
prices[1:5,]
listing[1:5,]
source('~/fuzzybnb/learn.R', chdir = TRUE)
listing[1:5,]
source('~/fuzzybnb/learn.R', chdir = TRUE)
manualMFs
source('~/fuzzybnb/learn.R', chdir = TRUE)
manualMFs
listing
listing[1:5,]
source('~/fuzzybnb/learn.R', chdir = TRUE)
summary(object.reg)
source('~/fuzzybnb/learn.R', chdir = TRUE)
source('~/fuzzybnb/learnSplits.R', chdir = TRUE)
features.train[1:5,]
source('~/fuzzybnb/learnSplits.R', chdir = TRUE)
plot(abs(res.test - data.targets))
plot(res.test, col="red")
plot(data.targets)
plot(res.test, col="red")
plot(data.targets)
plot(res.test, col="red")
points(data.targets)
plot(res.test, col="red", ylab="prices", xlab="index")
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(abs(res.test-data.targets))
plot(res.test, col="red", ylab="prices", xlab="index")
points(data.targets)
plot(res.test, col="red", ylab="prices", xlab="index")
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
bla <- c(1,2,3,4)
bla[0]
bla[1]
bla[2]
as.character(bla[2])
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")
points(data.targets)
abs(res.test -data.targets)
max(abs(res.test -data.targets))
min(abs(res.test -data.targets))
pos <- which(abs(res.test-data.targets) == 30)
pos
pos <- which(abs(res.test-data.targets) > 30)
pos
pos <- which(abs(res.test-data.targets) > 100)
pos
length(which(abs(res.test-data.targets)>200))
length(which(abs(res.test-data.targets)>300))
length(which(abs(res.test-data.targets)>400))
length(which(abs(res.test-data.targets)>20))
length(which(abs(res.test-data.targets)>20))/length(data.targets)
12/16
length(which(abs(res.test-data.targets)>60))/length(data.targets)
length(which(abs(res.test-data.targets)>90))/length(data.targets)
list <- seq(1,400,by=5)
list <- seq(5,400, by=5)#
plotthis <- c(1)#
i <- 0#
for nums in list:#
  plotthis[i] <- length(which(abs(res.test-data.targets)>nums))/length(data.targets)
list <- seq(5,400, by=5)#
plotthis <- c(1)#
i <- 0#
for (nums in list) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>nums))/length(data.targets)#
}
plot(plotthis)
for (nums in list) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>nums))/length(data.targets)#
  i <- i + 1#
}
plot(plotthis)
plot(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plot(plotthis,list xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plot(plotthis,list, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
len(list)
length(list)
length(plotthis)
plotthis <- c()#
i <- 1#
for (i < 400) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis,list, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plotthis <- c()#
i <- 1#
for (i < 400) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plotthis <- c()#
i <- 1#
while (i < 400) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plotthis <- c()#
i <- 1#
while (i < 400) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
line(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plotthis <- c()#
i <- 1#
while (i < 400) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
lines(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plotthis <- c()#
i <- 1#
while (i < 400) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plotthis <- c()#
i <- 1#
while (i < 300) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
plotthis <- c()#
i <- 1#
while (i < 200) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis, xlab="amount of euros off of real price", ylab="percentage of data set with error higher than x")
length(which(abs(res.test-data.targets)>200))/length(data.targets)
plotthis <- c()#
i <- 1#
while (i < 200) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis, xlab="error in amount of euros", ylab="percentage of data set with error higher than x")
plot(res.test, col="red", ylab="prices", xlab="index")
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")#
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")#
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")#
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")#
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")#
points(data.targets)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")#
points(data.targets)
plotMF(object.reg)
par(mar=c(1,1,1,1))
plotMF(object.reg)
print listing[1:5,]
print(listing[1:5,])
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(res.test, col="red", ylab="prices", xlab="index")#
points(data.targets)
plot(data.targets)
plot(res.test)
source('~/fuzzybnb/learn.R', chdir = TRUE)
c(1:(ncol(listing)-1))
source('~/fuzzybnb/learn.R', chdir = TRUE)
listing
listing[,2]$name
listing[1:2,2]
listing[1:5,2]
listing[1:5,]
listing[1:5,2]
colnames(listing)
colnames(listing[,2])
colnames(listing)[2]
source('~/fuzzybnb/learn.R', chdir = TRUE)
plotthis <- c()#
i <- 1#
while (i < 200) {#
  plotthis[i] <- length(which(abs(res.test-data.targets)>i))/length(data.targets)#
  i <- i + 1#
}#
plot(plotthis, xlab="error in amount of euros", ylab="percentage of data set with error higher than x")
(abs(res.test-data.targets)/data.targets)[1:5]
plot(which(abs(res.test-data.targets)/data.targets<0.2)/length(data.targets))
which(abs(res.test-data.targets)/data.targets<0.2)/length(data.targets)
length(which(abs(res.test-data.targets)/data.targets<0.2))/length(data.targets)
nums <- seq[0,0.6,0.01]
nums <- seq[0,1,0.01]
nums <- seq[0,100,1]
nums <- seq(0,0.6,0.01)
for (num in nums) {plotthis <- c(plotthis, length(which(abs(res.test-data.targets)/data.targets<0.2))/length(data.targets)) }
plotthis <- c()
for (num in nums) {plotthis <- c(plotthis, length(which(abs(res.test-data.targets)/data.targets<0.2))/length(data.targets)) }
plot(plotthis)
plotthis
for (num in nums) {plotthis <- c(plotthis, length(which(abs(res.test-data.targets)/data.targets<num))/length(data.targets)) }
plot(plotthis)
plotthis <- c()
for (num in nums) {plotthis <- c(plotthis, length(which(abs(res.test-data.targets)/data.targets<num))/length(data.targets)) }
plot(plotthis)
plotthis
plotthis <- c()
for (num in nums) {plotthis <- c(plotthis, c(length(which(abs(res.test-data.targets)/data.targets<num))/length(data.targets)),num) }
plot(plotthis)
plotthis
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(data.targets, col="red", ylab="prices", xlab="index")#
points(res.test)
plot(data.targets, col="red", ylab="prices", xlab="index")
plot(data.targets, col="red", ylab="prices", xlab="index")#
points(res.test)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(data.targets, col="red", ylab="prices", xlab="index")#
points(res.test)
source('~/fuzzybnb/learn.R', chdir = TRUE)
plot(data.targets, col="red", ylab="prices", xlab="index")#
points(res.test)
source('~/fuzzybnb/learn.R', chdir = TRUE)
source('~/fuzzybnb/learn.R', chdir = TRUE)
